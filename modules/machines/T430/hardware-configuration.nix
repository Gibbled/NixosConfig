# Do not modify this file!  It was generated by ‘nixos-generate-config’
# and may be overwritten by future invocations.  Please make changes
# to /etc/nixos/configuration.nix instead.
{ config, lib, pkgs, modulesPath, ... }:

{
  imports =
    [ (modulesPath + "/installer/scan/not-detected.nix")
    ];

  boot.initrd.availableKernelModules = [ "xhci_pci" "ehci_pci" "ahci" "usb_storage" "sd_mod" "sr_mod" "sdhci_pci" ];
  boot.initrd.kernelModules = [ ];
  boot.kernelModules = [ "kvm-intel" ];
  boot.extraModulePackages = [ ];
  boot.kernel.sysctl."kernel.dmesg_restrict" = 0;
  boot.kernelParams = [ "CONFIG_SECURITY_DMESG_RESTRICT=n" "microcode.amd_sha_check=off" ];



  fileSystems."/" =
    { device = "/dev/disk/by-uuid/5225079d-5a23-4d66-8e0a-ea4ad0505573";
      fsType = "ext4";
    };

  boot.initrd.luks.devices."luks-9cf46072-8cb0-46e1-9f39-4ea88bd26950".device = "/dev/disk/by-uuid/9cf46072-8cb0-46e1-9f39-4ea88bd26950";

  fileSystems."/boot" =
    { device = "/dev/disk/by-uuid/687B-43C6";
      fsType = "vfat";
      options = [ "fmask=0077" "dmask=0077" ];
    };

  swapDevices =
    [ { device = "/dev/disk/by-uuid/821a3ac4-698e-4953-a339-d1a5939239d0"; }
    ];

  # Enables DHCP on each ethernet and wireless interface. In case of scripted networking
  # (the default) this is the recommended approach. When using systemd-networkd it's
  # still possible to use this option, but it's recommended to use it in conjunction
  # with explicit per-interface declarations with `networking.interfaces.<interface>.useDHCP`.
  networking.useDHCP = lib.mkDefault true;
  # networking.interfaces.enp0s25.useDHCP = lib.mkDefault true;
  # networking.interfaces.wlp3s0.useDHCP = lib.mkDefault true;

  nixpkgs.hostPlatform = lib.mkDefault "x86_64-linux";
  hardware.cpu.intel.updateMicrocode = lib.mkDefault config.hardware.enableRedistributableFirmware;
}
